generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique
  name  String

  password     String
  refreshToken String?

  reviews Review[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Customer {
  id    Int     @id @default(autoincrement())
  name  String?
  phone String? @unique
  email String? @unique

  reviews Review[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  rating  Int
  comment String?

  customerId Int
  customer   Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  businessId Int
  business   User     @relation(fields: [businessId], references: [id], onDelete: Cascade)

  tags TagsOnReviews[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([businessId, customerId])
  @@index([customerId])
  @@index([businessId])
}

model ReviewTag {
  id      Int             @id @default(autoincrement())
  name    String          @unique
  reviews TagsOnReviews[]
}

model TagsOnReviews {
  tagId      Int
  tag        ReviewTag @relation(fields: [tagId], references: [id], onDelete: Cascade)
  customerId Int
  businessId Int
  review     Review    @relation(fields: [businessId, customerId], references: [businessId, customerId], onDelete: Cascade)

  @@id([tagId, businessId, customerId])
  @@index([tagId])
  @@index([businessId])
  @@index([customerId])
}
